apple had been experimenting with software components internally for some time , based on the initial work done on its publish and subscribe linking model and the applescript scripting language , which in turn was based on the hypercard programming environment a component document system would only work with a known document format that all the components could use , and so soon the standardized document format was pulled into the component software effort with opendoc entering the historic aim alliance between apple , ibm , and motorola , apple was also involved in taligent during some of this period , which promised somewhat similar functionality although based on very different underlying mechanisms while opendoc was still being developed , apple confused things greatly by suggesting that it should be used by people porting existing software only , and new projects should instead be based on taligent since that would be the next os taligent was considered the future of the mac platform , and work on other tools like macapp was considerably deprioritized apple proposed that the code would be used for opendoc programming , but nothing was ever heard of this again , and bedrock disappeared ibm introduced the system object model ( som ) shared library system to the project , which became a major part of apple 's future efforts , in and out of opendoc as part of the aim alliance between apple , ibm , and motorola , opendoc is one of apple 's earliest experiments with open standards and collaborative development methods with other companies apple and its partners never publicly released the source code , but did make the complete source available to developers for feedback , testing , and debugging purposes after three years of development on opendoc itself , the first opendoc-based product release is apple 's cyberdog web browser in may 1996 another issue was that opendoc had little in common with most '' real world '' document formats , and so opendoc documents could really only be used by other opendoc machines although one would expect some effort to allow the system to export to other formats , this was often impractical because each component held its own data for instance , it took significant effort for the system to be able to turn a text file with some pictures into a microsoft word document , both because the text editor had no idea what was in the embedded objects , and because the proprietary microsoft format was undocumented and required reverse engineering another problem was the fact that each part saved its data within bento ( the former name of an opendoc compound document file format ) in its own internal binary format , and it was very common to find one component could not open a document created by another , even though the internal data represented similar objects ( spreadsheet data for instance ) at the same time , microsoft used the synergy between the os and applications divisions of the company to make it effectively mandatory that developers adopt the competing ole technology in order to obtain a windows 95 compliance logo from microsoft , one had to meet certain interoperability tests which were quite difficult to meet without adoption of ole technology , even though the technology was largely only useful in integrating with microsoft office 