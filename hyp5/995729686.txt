the complexity class np may be viewed as a very simple proof system although np may be viewed as using interaction , it was n't until 1985 that the concept of computation through interaction was conceived ( in the context of complexity theory ) by two independent groups of researchers this machine is potentially more powerful than an ordinary np interaction protocol , and the certificates are no less practical to verify , since bpp algorithms are considered as abstracting practical computation ( see bpp ) in arthur–merlin protocols , babai defined a similar class amf ( n ) which allowed f ( n ) rounds , but he put one extra condition on the machine : the verifier must show the prover all the random bits it uses in its computation this was a primary motivation in defining the ip proof systems arthur–merlin games : a randomized proof system , and a hierarchy of complexity classes this problem is in np , since the proof certificate is the permutation which makes the graphs equal it turns out that the complement of the graph isomorphism problem , a co-np problem not known to be in np , has an am algorithm and the best way to see it is via a private coins algorithm if we allow the probabilistic verifier machine and the all-powerful prover to interact for a polynomial number of rounds , we get the class of problems called ip in 1992 , adi shamir revealed in one of the central results of complexity theory that ip equals pspace , the class of problems solvable by an ordinary deterministic turing machine in polynomial space if we allow the elements of the system to use quantum computation , the system is called a quantum interactive proof system , and the corresponding complexity class is called qip not only can interactive proof systems solve problems not believed to be in np , but under assumptions about the existence of one-way functions , a prover can convince the verifier of the solution without ever giving the verifier information about the solution overcame this in their 1988 '' multi prover interactive proofs : how to remove intractability assumptions '' , which defines a variant of ip called mip in which there are two independent provers mip also has the helpful property that zero-knowledge proofs for every language in np can be described without the assumption of one-way functions that ip must make moreover , a mip protocol can recognize all languages in ip in only a constant number of rounds , and if a third prover is added , it can recognize all languages in nexptime in a constant number of rounds , showing again its power over ip while the designers of ip considered generalizations of babai 's interactive proof systems , others considered restrictions they used this valuable characterization of np to prove that approximation algorithms do not exist for the optimization versions of certain np-complete problems unless p np 