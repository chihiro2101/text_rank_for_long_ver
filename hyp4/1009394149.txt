when programming computers or systems with many processors , in process-oriented programming , programs are treated as sets of concurrent processes that act on a logical shared data structures many programming paradigms are as well known for the techniques they forbid as for those they enable programming paradigms can also be compared with programming models , which allows invoking an execution model by using only an api for parallel computing , using a programming model instead of a language is common as a consequence , no one parallel programming language maps well to all computation problems . they argue that many programming languages can not be strictly classified into one paradigm , but rather include features from several paradigms in the 1960s , assembly languages were developed to support library copy and quite sophisticated conditional macro generation and preprocessing abilities , call to ( subroutines ) , external variables and common sections ( globals ) , enabling significant code re-use and isolation from hardware specifics via the use of logical operators such as read/write/get/put for example , common business oriented language ( cobol ) uses terms like file , move and copy because object-oriented programming is considered a paradigm , not a language , it is possible to create even an object-oriented assembler language programs written using this paradigm use functions , blocks of code intended to behave like function ( mathematics ) functional languages discourage changes in the value of variables through assignment , making a great deal of use of recursion instead symbolic programming is a paradigm that describes programs able to manipulate formulas and program components as data most programming languages support more than one programming paradigm to allow programmers to use the most suitable programming style and associated language constructs for a given job . 