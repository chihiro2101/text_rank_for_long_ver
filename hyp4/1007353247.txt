these systems may or may not allow other applications to access the data directly , and those that did use a wide variety of methodologies for instance , a sql statement like select from city could be inserted as text within c source code , and during compiler it would be converted into a custom format that directly called a function within a library that would pass the statement into the sql system like the different varieties of sql , the embedded sqls that used them varied widely , not only from platform to platform , but even across languages on one platform – a system that allowed calls into ibm 's db2 would look very different from one that called into their own sql/ds another key problem to the embedded sql concept was that the sql code could only be changed in the program 's source code , so that even small changes to the query required considerable programmer effort to modify instead , the data was accessed directly by the program – a programming library in the case of large mainframe systems , or a command line interface or interactive forms system in the case of dbase and similar applications data from dbase could not generally be accessed directly by other programs running on the machine those programs may be given a way to access this data , often through libraries , but it would not work with any other database engine , or even different databases in the same engine for this model to work , a data access standard was a requirement – in the mainframe field it was highly likely that all of the computers in a shop were from one vendor and clients were computer terminals talking directly to them , but in the micro field there was no such standardization and any client might access any server using any networking system some of these were mainframe related , designed to allow programs running on those machines to translate between the variety of sql 's and provide a single common interface which could then be called by other mainframe or microcomputer programs much more common , however , were systems that ran entirely on microcomputers , including a complete protocol stack that included any required networking or file translation support blueprint , developed for 1-2-3 , supported a variety of data sources , including sql/ds , db2 , focus and a variety of similar mainframe systems , as well as microcomputer systems like dbase and the early microsoft/ashton-tate efforts that would eventually develop into microsoft sql server much of the system was based on sybase 's db-library system , with the sybase-specific sections removed and several additions to support other platforms db-library was aided by an industry-wide move from library systems that were tightly linked to a specific language , to library systems that were provided by the operating system and required the languages on that platform to conform to its standards in 1988 several vendors , mostly from the unix and database communities , formed the sql access group ( sag ) in an effort to produce a single basic standard for the sql language jet combined three primary subsystems ; an isam-based database engine ( also named jet , confusingly ) , a c-based interface allowing applications to access that data , and a selection of driver dynamic-link libraries ( dll ) that allowed the same c interface to redirect input and output to other isam-based databases , like paradox and xbase jet allowed using one set of calls to access common microcomputer databases in a fashion similar to blueprint , by then renamed datalens however , jet did not use sql ; like datalens , the interface was in c and consisted of data structures and function calls this would not only make windows a premier platform for cli development , but also allow users to use sql to access both jet and other databases as well some of this was unavoidable due to the path that the calls took through the jet-based stack ; odbc calls to sql databases were first converted from simba technologies 's sql dialect to jet 's internal c-based format , then passed to a driver for conversion back into sql calls for the database the two systems remain similar , and many applications can be ported from odbc to cli with few or no changes '' similarities and differences between odbc and cli '' , infosphere classic documentation , ibm , 26 september 2008 over time , database vendors took over the driver interfaces and provided direct links to their products however , by then microsoft had changed focus to their ole db concept ( recently reinstated ) , which provided direct access to a wider variety of data sources from address books to text files this was propelled by two changes within the market , the introduction of graphical user interfaces ( guis ) like gnome that provided a need to access these sources in non-text form , and the emergence of open software database systems like postgresql and mysql , initially under unix odbc remains in wide use today , with drivers available for most platforms and most databases in these scenarios , there is no direct client-side access nor multiple client software systems to support ; everything goes through the programmer-supplied html application odbc is based on the device driver model , where the driver encapsulates the logic needed to convert a standard set of commands and functions into the specific calls required by the underlying system finally , another set of commands , mostly used internally , is used to convert data from the dbms 's internal formats to a set of standardized odbc formats , which are based on the c language formats for instance , the same mysql driver can be used to connect to any mysql server , but the connection information to connect to a local private server is different from the information needed to connect to an internet-hosted public server microsoft ships one , msdasql.dll , as part of the mdac system component bundle , together with other database drivers , to simplify development in com-aware languages ( e.g third parties have also developed such , notably openlink software whose 64-bit ole db provider for odbc data sources filled the gap when microsoft initially deprecated this bridge for their 64-bit os microsoft ships one as part of the mdac system component bundle , together with other database drivers , to simplify development in c 