in current technical usage , for one to state that a feature is deprecated is merely a recommendation against using it while a deprecated software feature remains in the software , its use may raise warning messages recommending alternative practices features are deprecated , rather than immediately removed , to provide backward compatibility and to give programmers time to bring affected code into compliance with the new standard the feature contains a design flaw , frequently a security flaw , and so should be avoided , but existing code depends upon it the simple c standard function gets ( ) is an example , because using this function can introduce a buffer overflow into the program that uses it the feature is considered extraneous , and will be removed in the future in order to simplify the system as a whole a future version of the software will make major structural changes , making it impossible ( or impractical ) to support older features the original name will likely remain indefinitely , but will be deprecated to encourage use of the newer , more consistent naming convention standardization would result in the use of only one of the regional spellings throughout , and all occurrences of the other spelling would be deprecated the term deprecated may also be used when a technical term becomes obsolete , either through change or supersession 