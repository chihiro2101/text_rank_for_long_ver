unlike a traditional dual-processor configuration that uses two separate physical processors , the logical processors in a hyper-threaded core share the execution resources these resources include the execution engine , caches , and system bus interface ; the sharing of resources allows two logical processors to work with each other more efficiently , and allows a logical processor to borrow resources from a stalled logical core ( assuming both logical cores are associated with the same physical core ) the degree of benefit seen when using a hyper-threaded or multi core processor depends on the needs of the software , and how well it and the operating system are written to manage the processor efficiently this allows a hyper-threading processor to appear as the usual '' physical '' processor and an extra '' logical '' processor to the host operating system ( htt-unaware operating systems see two '' physical '' processors ) , allowing the operating system to schedule two threads or processes simultaneously and appropriately when execution resources would not be used by the current task in a processor without hyper-threading , and especially when the processor is stalled , a hyper-threading equipped processor can use those execution resources to execute another scheduled task for example , consider an smp system with two physical processors that are both hyper-threaded ( for a total of four logical processors ) according to intel , the first hyper-threading implementation used only 5 % more die area than the comparable non-hyperthreaded processor , but the performance was 15â€“30 % better as a result , performance improvements are very application-dependent ; however , when running two programs that require full attention of the processor , it can actually seem like one or both of the programs slows down slightly when hyper-threading technology is turned on this is due to the replay system of the pentium & nbsp ; 4 tying up valuable execution resources , equalizing the processor resources between the two programs , which adds a varying amount of execution time in other words , overall processing latency is significantly increased due to hyper-threading , with the negative effects becoming smaller as there are more simultaneous threads that can effectively use the additional hardware resource utilization provided by hyper-threading for example , specialist low-power cpu design company arm stated that simultaneous multithreading can use up to 46 % more power than ordinary dual-core designs in 2013 , intel dropped smt in favor of out-of-order execution for its silvermont processor cores , as they found this gave better performance with better power efficiency than a lower number of cores with smt potential solutions to this include the processor changing its cache eviction strategy or the operating system preventing the simultaneous execution , on the same physical core , of threads with different privileges 