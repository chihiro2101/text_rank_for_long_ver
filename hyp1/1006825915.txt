the concept of reconfigurable computing has existed since the 1960s , when gerald estrin 's paper proposed the concept of a computer made of a standard processor and an array of '' reconfigurable '' hardware the main processor would control the behavior of the reconfigurable hardware this resulted in a hybrid computer structure combining the flexibility of software with the speed of hardware 1 , 2003 such designs were feasible due to the constant progress of silicon technology that let complex designs be implemented on one chip the fundamental model of the reconfigurable computing machine paradigm , the data-stream-based anti machine is well illustrated by the differences to other machine paradigms that were introduced earlier , as shown by nick tredennick 's following classification scheme of computing paradigms ( see '' table 1 : nick tredennick â€™ s paradigm classification scheme '' ) one research area is the twin-paradigm programming tool flow productivity obtained for such heterogeneous systems partial reconfiguration allows for critical parts of the design to continue operating while a controller either on the fpga or off of it loads a partial design into a reconfigurable module a special software flow with emphasis on modular design is required typically the design modules are built along well defined boundaries inside the fpga that require the design to be specially mapped to the internal hardware national instruments have developed a hybrid embedded computing system called compactrio the intel fpga partial reconfiguration flow for arria 10 is based on the hierarchical design methodology in the quartus prime pro software where users create physical partitions of the fpga that can be reconfigured at runtime while the remainder of the design continues to operate as their functional blocks are optimized for large computations and typically comprise word wide arithmetic logic units ( alu ) , they will perform these computations more quickly and with more power efficiency than a set of interconnected smaller functional units ; this is due to the connecting wires being shorter , resulting in less wire capacitance and hence faster and lower power designs often the type of applications to be run are known in advance allowing the logic , memory and routing resources to be tailored to enhance the performance of the device whilst still providing a certain level of flexibility for future adaptation in a typical reconfigurable system , a bit stream is used to program the device at deployment time fine grained systems by their own nature require greater configuration time than more coarse-grained architectures due to more elements needing to be addressed and programmed however , there have also been implementations where the reconfigurable fabric is much closer to the processor , some are even implemented into the data path , utilising the processor registers the job of the host processor is to perform the control functions , configure the logic , schedule data and to provide external interfacing one of the key challenges for reconfigurable computing is to enable higher design productivity and provide an easier way to use reconfigurable computing systems for users that are unfamiliar with the underlying concepts in other words , the two main tasks of an operating system are abstraction and resource management abstraction is a powerful mechanism to handle complex and different ( hardware ) tasks in a well-defined and common manner a process is a running application that has the perception ( provided by the os ) that it is running on its own on the underlying virtual hardware in addition to abstraction , resource management of the underlying hardware components is necessary because the virtual computers provided to the processes and threads by the operating system need to share available physical resources ( processors , memory , and devices ) spatially and temporarily 